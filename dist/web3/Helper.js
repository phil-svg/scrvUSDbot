import { getWeb3WsProvider } from './generic.js';
export async function getContractFeeSplitter() {
    const address = '0x2dFd89449faff8a532790667baB21cF733C064f2';
    let WEB3_WS_PROVIDER = getWeb3WsProvider();
    const abi = [
        { anonymous: false, inputs: [], name: 'SetReceivers', type: 'event' },
        { anonymous: false, inputs: [], name: 'LivenessProtectionTriggered', type: 'event' },
        {
            anonymous: false,
            inputs: [
                { indexed: true, name: 'receiver', type: 'address' },
                { indexed: false, name: 'weight', type: 'uint256' },
            ],
            name: 'FeeDispatched',
            type: 'event',
        },
        {
            anonymous: false,
            inputs: [
                { indexed: true, name: 'previous_owner', type: 'address' },
                { indexed: true, name: 'new_owner', type: 'address' },
            ],
            name: 'OwnershipTransferred',
            type: 'event',
        },
        {
            inputs: [{ name: 'new_owner', type: 'address' }],
            name: 'transfer_ownership',
            outputs: [],
            stateMutability: 'nonpayable',
            type: 'function',
        },
        { inputs: [], name: 'renounce_ownership', outputs: [], stateMutability: 'nonpayable', type: 'function' },
        { inputs: [], name: 'owner', outputs: [{ name: '', type: 'address' }], stateMutability: 'view', type: 'function' },
        { inputs: [], name: 'update_controllers', outputs: [], stateMutability: 'nonpayable', type: 'function' },
        {
            inputs: [],
            name: 'n_controllers',
            outputs: [{ name: '', type: 'uint256' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [{ name: 'arg0', type: 'address' }],
            name: 'allowed_controllers',
            outputs: [{ name: '', type: 'bool' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [{ name: 'arg0', type: 'uint256' }],
            name: 'controllers',
            outputs: [{ name: '', type: 'address' }],
            stateMutability: 'view',
            type: 'function',
        },
        { inputs: [], name: 'dispatch_fees', outputs: [], stateMutability: 'nonpayable', type: 'function' },
        {
            inputs: [{ name: 'controllers', type: 'address[]' }],
            name: 'dispatch_fees',
            outputs: [],
            stateMutability: 'nonpayable',
            type: 'function',
        },
        {
            inputs: [
                {
                    components: [
                        { name: 'addr', type: 'address' },
                        { name: 'weight', type: 'uint256' },
                    ],
                    name: 'receivers',
                    type: 'tuple[]',
                },
            ],
            name: 'set_receivers',
            outputs: [],
            stateMutability: 'nonpayable',
            type: 'function',
        },
        {
            inputs: [],
            name: 'excess_receiver',
            outputs: [{ name: '', type: 'address' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [],
            name: 'n_receivers',
            outputs: [{ name: '', type: 'uint256' }],
            stateMutability: 'view',
            type: 'function',
        },
        { inputs: [], name: 'version', outputs: [{ name: '', type: 'string' }], stateMutability: 'view', type: 'function' },
        {
            inputs: [{ name: 'arg0', type: 'uint256' }],
            name: 'receivers',
            outputs: [
                {
                    components: [
                        { name: 'addr', type: 'address' },
                        { name: 'weight', type: 'uint256' },
                    ],
                    name: '',
                    type: 'tuple',
                },
            ],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [
                { name: '_crvusd', type: 'address' },
                { name: '_factory', type: 'address' },
                {
                    components: [
                        { name: 'addr', type: 'address' },
                        { name: 'weight', type: 'uint256' },
                    ],
                    name: 'receivers',
                    type: 'tuple[]',
                },
                { name: 'owner', type: 'address' },
            ],
            outputs: [],
            stateMutability: 'nonpayable',
            type: 'constructor',
        },
    ];
    const contract = new WEB3_WS_PROVIDER.eth.Contract(abi, address);
    return contract;
}
export async function getContractRewardsHandler() {
    const address = '0xE8d1E2531761406Af1615A6764B0d5fF52736F56';
    let WEB3_WS_PROVIDER = getWeb3WsProvider();
    const abi = [
        {
            anonymous: false,
            inputs: [{ indexed: false, name: 'new_minimum_weight', type: 'uint256' }],
            name: 'MinimumWeightUpdated',
            type: 'event',
        },
        {
            anonymous: false,
            inputs: [{ indexed: false, name: 'new_scaling_factor', type: 'uint256' }],
            name: 'ScalingFactorUpdated',
            type: 'event',
        },
        {
            anonymous: false,
            inputs: [{ indexed: false, name: 'new_stablecoin_lens', type: 'address' }],
            name: 'StablecoinLensUpdated',
            type: 'event',
        },
        {
            anonymous: false,
            inputs: [
                { indexed: true, name: 'role', type: 'bytes32' },
                { indexed: true, name: 'account', type: 'address' },
                { indexed: true, name: 'sender', type: 'address' },
            ],
            name: 'RoleGranted',
            type: 'event',
        },
        {
            anonymous: false,
            inputs: [
                { indexed: true, name: 'role', type: 'bytes32' },
                { indexed: true, name: 'account', type: 'address' },
                { indexed: true, name: 'sender', type: 'address' },
            ],
            name: 'RoleRevoked',
            type: 'event',
        },
        {
            anonymous: false,
            inputs: [{ indexed: false, name: 'new_window', type: 'uint256' }],
            name: 'TWAWindowUpdated',
            type: 'event',
        },
        {
            anonymous: false,
            inputs: [{ indexed: false, name: 'new_dt_seconds', type: 'uint256' }],
            name: 'SnapshotIntervalUpdated',
            type: 'event',
        },
        {
            anonymous: false,
            inputs: [
                { indexed: true, name: 'role', type: 'bytes32' },
                { indexed: true, name: 'previousAdminRole', type: 'bytes32' },
                { indexed: true, name: 'newAdminRole', type: 'bytes32' },
            ],
            name: 'RoleAdminChanged',
            type: 'event',
        },
        {
            anonymous: false,
            inputs: [
                { indexed: false, name: 'value', type: 'uint256' },
                { indexed: false, name: 'timestamp', type: 'uint256' },
            ],
            name: 'SnapshotTaken',
            type: 'event',
        },
        {
            inputs: [
                { name: 'role', type: 'bytes32' },
                { name: 'account', type: 'address' },
            ],
            name: 'grantRole',
            outputs: [],
            stateMutability: 'nonpayable',
            type: 'function',
        },
        {
            inputs: [
                { name: 'role', type: 'bytes32' },
                { name: 'account', type: 'address' },
            ],
            name: 'revokeRole',
            outputs: [],
            stateMutability: 'nonpayable',
            type: 'function',
        },
        {
            inputs: [
                { name: 'role', type: 'bytes32' },
                { name: 'account', type: 'address' },
            ],
            name: 'renounceRole',
            outputs: [],
            stateMutability: 'nonpayable',
            type: 'function',
        },
        {
            inputs: [
                { name: 'role', type: 'bytes32' },
                { name: 'admin_role', type: 'bytes32' },
            ],
            name: 'set_role_admin',
            outputs: [],
            stateMutability: 'nonpayable',
            type: 'function',
        },
        {
            inputs: [],
            name: 'DEFAULT_ADMIN_ROLE',
            outputs: [{ name: '', type: 'bytes32' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [
                { name: 'arg0', type: 'bytes32' },
                { name: 'arg1', type: 'address' },
            ],
            name: 'hasRole',
            outputs: [{ name: '', type: 'bool' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [{ name: 'arg0', type: 'bytes32' }],
            name: 'getRoleAdmin',
            outputs: [{ name: '', type: 'bytes32' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [],
            name: 'compute_twa',
            outputs: [{ name: '', type: 'uint256' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [{ name: 'arg0', type: 'uint256' }],
            name: 'snapshots',
            outputs: [
                {
                    components: [
                        { name: 'tracked_value', type: 'uint256' },
                        { name: 'timestamp', type: 'uint256' },
                    ],
                    name: '',
                    type: 'tuple',
                },
            ],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [],
            name: 'get_len_snapshots',
            outputs: [{ name: '', type: 'uint256' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [],
            name: 'twa_window',
            outputs: [{ name: '', type: 'uint256' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [],
            name: 'min_snapshot_dt_seconds',
            outputs: [{ name: '', type: 'uint256' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [],
            name: 'last_snapshot_timestamp',
            outputs: [{ name: '', type: 'uint256' }],
            stateMutability: 'view',
            type: 'function',
        },
        { inputs: [], name: 'take_snapshot', outputs: [], stateMutability: 'nonpayable', type: 'function' },
        { inputs: [], name: 'process_rewards', outputs: [], stateMutability: 'nonpayable', type: 'function' },
        {
            inputs: [{ name: 'take_snapshot', type: 'bool' }],
            name: 'process_rewards',
            outputs: [],
            stateMutability: 'nonpayable',
            type: 'function',
        },
        {
            inputs: [{ name: 'interface_id', type: 'bytes4' }],
            name: 'supportsInterface',
            outputs: [{ name: '', type: 'bool' }],
            stateMutability: 'view',
            type: 'function',
        },
        { inputs: [], name: 'weight', outputs: [{ name: '', type: 'uint256' }], stateMutability: 'view', type: 'function' },
        {
            inputs: [{ name: '_min_snapshot_dt_seconds', type: 'uint256' }],
            name: 'set_twa_snapshot_dt',
            outputs: [],
            stateMutability: 'nonpayable',
            type: 'function',
        },
        {
            inputs: [{ name: '_twa_window', type: 'uint256' }],
            name: 'set_twa_window',
            outputs: [],
            stateMutability: 'nonpayable',
            type: 'function',
        },
        {
            inputs: [{ name: 'new_distribution_time', type: 'uint256' }],
            name: 'set_distribution_time',
            outputs: [],
            stateMutability: 'nonpayable',
            type: 'function',
        },
        {
            inputs: [],
            name: 'distribution_time',
            outputs: [{ name: '', type: 'uint256' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [{ name: 'new_minimum_weight', type: 'uint256' }],
            name: 'set_minimum_weight',
            outputs: [],
            stateMutability: 'nonpayable',
            type: 'function',
        },
        {
            inputs: [{ name: 'new_scaling_factor', type: 'uint256' }],
            name: 'set_scaling_factor',
            outputs: [],
            stateMutability: 'nonpayable',
            type: 'function',
        },
        {
            inputs: [{ name: '_lens', type: 'address' }],
            name: 'set_stablecoin_lens',
            outputs: [],
            stateMutability: 'nonpayable',
            type: 'function',
        },
        {
            inputs: [
                { name: 'token', type: 'address' },
                { name: 'receiver', type: 'address' },
            ],
            name: 'recover_erc20',
            outputs: [],
            stateMutability: 'nonpayable',
            type: 'function',
        },
        {
            inputs: [],
            name: 'RATE_MANAGER',
            outputs: [{ name: '', type: 'bytes32' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [],
            name: 'RECOVERY_MANAGER',
            outputs: [{ name: '', type: 'bytes32' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [],
            name: 'LENS_MANAGER',
            outputs: [{ name: '', type: 'bytes32' }],
            stateMutability: 'view',
            type: 'function',
        },
        { inputs: [], name: 'vault', outputs: [{ name: '', type: 'address' }], stateMutability: 'view', type: 'function' },
        {
            inputs: [],
            name: 'stablecoin_lens',
            outputs: [{ name: '', type: 'address' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [],
            name: 'scaling_factor',
            outputs: [{ name: '', type: 'uint256' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [],
            name: 'minimum_weight',
            outputs: [{ name: '', type: 'uint256' }],
            stateMutability: 'view',
            type: 'function',
        },
        {
            inputs: [
                { name: '_stablecoin', type: 'address' },
                { name: '_vault', type: 'address' },
                { name: '_lens', type: 'address' },
                { name: 'minimum_weight', type: 'uint256' },
                { name: 'scaling_factor', type: 'uint256' },
                { name: 'admin', type: 'address' },
            ],
            outputs: [],
            stateMutability: 'nonpayable',
            type: 'constructor',
        },
    ];
    const contract = new WEB3_WS_PROVIDER.eth.Contract(abi, address);
    return contract;
}
export async function getContractSavingsCrvUSD() {
    const address = '0x0655977feb2f289a4ab78af67bab0d17aab84367';
    let WEB3_WS_PROVIDER = getWeb3WsProvider();
    const abi = [
        {
            name: 'Deposit',
            inputs: [
                { name: 'sender', type: 'address', indexed: true },
                { name: 'owner', type: 'address', indexed: true },
                { name: 'assets', type: 'uint256', indexed: false },
                { name: 'shares', type: 'uint256', indexed: false },
            ],
            anonymous: false,
            type: 'event',
        },
        {
            name: 'Withdraw',
            inputs: [
                { name: 'sender', type: 'address', indexed: true },
                { name: 'receiver', type: 'address', indexed: true },
                { name: 'owner', type: 'address', indexed: true },
                { name: 'assets', type: 'uint256', indexed: false },
                { name: 'shares', type: 'uint256', indexed: false },
            ],
            anonymous: false,
            type: 'event',
        },
        {
            name: 'Transfer',
            inputs: [
                { name: 'sender', type: 'address', indexed: true },
                { name: 'receiver', type: 'address', indexed: true },
                { name: 'value', type: 'uint256', indexed: false },
            ],
            anonymous: false,
            type: 'event',
        },
        {
            name: 'Approval',
            inputs: [
                { name: 'owner', type: 'address', indexed: true },
                { name: 'spender', type: 'address', indexed: true },
                { name: 'value', type: 'uint256', indexed: false },
            ],
            anonymous: false,
            type: 'event',
        },
        {
            name: 'StrategyChanged',
            inputs: [
                { name: 'strategy', type: 'address', indexed: true },
                { name: 'change_type', type: 'uint256', indexed: true },
            ],
            anonymous: false,
            type: 'event',
        },
        {
            name: 'StrategyReported',
            inputs: [
                { name: 'strategy', type: 'address', indexed: true },
                { name: 'gain', type: 'uint256', indexed: false },
                { name: 'loss', type: 'uint256', indexed: false },
                { name: 'current_debt', type: 'uint256', indexed: false },
                { name: 'protocol_fees', type: 'uint256', indexed: false },
                { name: 'total_fees', type: 'uint256', indexed: false },
                { name: 'total_refunds', type: 'uint256', indexed: false },
            ],
            anonymous: false,
            type: 'event',
        },
        {
            name: 'DebtUpdated',
            inputs: [
                { name: 'strategy', type: 'address', indexed: true },
                { name: 'current_debt', type: 'uint256', indexed: false },
                { name: 'new_debt', type: 'uint256', indexed: false },
            ],
            anonymous: false,
            type: 'event',
        },
        {
            name: 'RoleSet',
            inputs: [
                { name: 'account', type: 'address', indexed: true },
                { name: 'role', type: 'uint256', indexed: true },
            ],
            anonymous: false,
            type: 'event',
        },
        {
            name: 'UpdateFutureRoleManager',
            inputs: [{ name: 'future_role_manager', type: 'address', indexed: true }],
            anonymous: false,
            type: 'event',
        },
        {
            name: 'UpdateRoleManager',
            inputs: [{ name: 'role_manager', type: 'address', indexed: true }],
            anonymous: false,
            type: 'event',
        },
        {
            name: 'UpdateAccountant',
            inputs: [{ name: 'accountant', type: 'address', indexed: true }],
            anonymous: false,
            type: 'event',
        },
        {
            name: 'UpdateDepositLimitModule',
            inputs: [{ name: 'deposit_limit_module', type: 'address', indexed: true }],
            anonymous: false,
            type: 'event',
        },
        {
            name: 'UpdateWithdrawLimitModule',
            inputs: [{ name: 'withdraw_limit_module', type: 'address', indexed: true }],
            anonymous: false,
            type: 'event',
        },
        {
            name: 'UpdateDefaultQueue',
            inputs: [{ name: 'new_default_queue', type: 'address[]', indexed: false }],
            anonymous: false,
            type: 'event',
        },
        {
            name: 'UpdateUseDefaultQueue',
            inputs: [{ name: 'use_default_queue', type: 'bool', indexed: false }],
            anonymous: false,
            type: 'event',
        },
        {
            name: 'UpdateAutoAllocate',
            inputs: [{ name: 'auto_allocate', type: 'bool', indexed: false }],
            anonymous: false,
            type: 'event',
        },
        {
            name: 'UpdatedMaxDebtForStrategy',
            inputs: [
                { name: 'sender', type: 'address', indexed: true },
                { name: 'strategy', type: 'address', indexed: true },
                { name: 'new_debt', type: 'uint256', indexed: false },
            ],
            anonymous: false,
            type: 'event',
        },
        {
            name: 'UpdateDepositLimit',
            inputs: [{ name: 'deposit_limit', type: 'uint256', indexed: false }],
            anonymous: false,
            type: 'event',
        },
        {
            name: 'UpdateMinimumTotalIdle',
            inputs: [{ name: 'minimum_total_idle', type: 'uint256', indexed: false }],
            anonymous: false,
            type: 'event',
        },
        {
            name: 'UpdateProfitMaxUnlockTime',
            inputs: [{ name: 'profit_max_unlock_time', type: 'uint256', indexed: false }],
            anonymous: false,
            type: 'event',
        },
        {
            name: 'DebtPurchased',
            inputs: [
                { name: 'strategy', type: 'address', indexed: true },
                { name: 'amount', type: 'uint256', indexed: false },
            ],
            anonymous: false,
            type: 'event',
        },
        { name: 'Shutdown', inputs: [], anonymous: false, type: 'event' },
        { stateMutability: 'nonpayable', type: 'constructor', inputs: [], outputs: [] },
        {
            stateMutability: 'nonpayable',
            type: 'function',
            name: 'initialize',
            inputs: [
                { name: 'asset', type: 'address' },
                { name: 'name', type: 'string' },
                { name: 'symbol', type: 'string' },
                { name: 'role_manager', type: 'address' },
                { name: 'profit_max_unlock_time', type: 'uint256' },
            ],
            outputs: [],
        },
        {
            stateMutability: 'nonpayable',
            type: 'function',
            name: 'setName',
            inputs: [{ name: 'name', type: 'string' }],
            outputs: [],
        },
        {
            stateMutability: 'nonpayable',
            type: 'function',
            name: 'setSymbol',
            inputs: [{ name: 'symbol', type: 'string' }],
            outputs: [],
        },
        {
            stateMutability: 'nonpayable',
            type: 'function',
            name: 'set_accountant',
            inputs: [{ name: 'new_accountant', type: 'address' }],
            outputs: [],
        },
        {
            stateMutability: 'nonpayable',
            type: 'function',
            name: 'set_default_queue',
            inputs: [{ name: 'new_default_queue', type: 'address[]' }],
            outputs: [],
        },
        {
            stateMutability: 'nonpayable',
            type: 'function',
            name: 'set_use_default_queue',
            inputs: [{ name: 'use_default_queue', type: 'bool' }],
            outputs: [],
        },
        {
            stateMutability: 'nonpayable',
            type: 'function',
            name: 'set_auto_allocate',
            inputs: [{ name: 'auto_allocate', type: 'bool' }],
            outputs: [],
        },
        {
            stateMutability: 'nonpayable',
            type: 'function',
            name: 'set_deposit_limit',
            inputs: [{ name: 'deposit_limit', type: 'uint256' }],
            outputs: [],
        },
        {
            stateMutability: 'nonpayable',
            type: 'function',
            name: 'set_deposit_limit',
            inputs: [
                { name: 'deposit_limit', type: 'uint256' },
                { name: 'override', type: 'bool' },
            ],
            outputs: [],
        },
        {
            stateMutability: 'nonpayable',
            type: 'function',
            name: 'set_deposit_limit_module',
            inputs: [{ name: 'deposit_limit_module', type: 'address' }],
            outputs: [],
        },
        {
            stateMutability: 'nonpayable',
            type: 'function',
            name: 'set_deposit_limit_module',
            inputs: [
                { name: 'deposit_limit_module', type: 'address' },
                { name: 'override', type: 'bool' },
            ],
            outputs: [],
        },
        {
            stateMutability: 'nonpayable',
            type: 'function',
            name: 'set_withdraw_limit_module',
            inputs: [{ name: 'withdraw_limit_module', type: 'address' }],
            outputs: [],
        },
        {
            stateMutability: 'nonpayable',
            type: 'function',
            name: 'set_minimum_total_idle',
            inputs: [{ name: 'minimum_total_idle', type: 'uint256' }],
            outputs: [],
        },
        {
            stateMutability: 'nonpayable',
            type: 'function',
            name: 'setProfitMaxUnlockTime',
            inputs: [{ name: 'new_profit_max_unlock_time', type: 'uint256' }],
            outputs: [],
        },
        {
            stateMutability: 'nonpayable',
            type: 'function',
            name: 'set_role',
            inputs: [
                { name: 'account', type: 'address' },
                { name: 'role', type: 'uint256' },
            ],
            outputs: [],
        },
        {
            stateMutability: 'nonpayable',
            type: 'function',
            name: 'add_role',
            inputs: [
                { name: 'account', type: 'address' },
                { name: 'role', type: 'uint256' },
            ],
            outputs: [],
        },
        {
            stateMutability: 'nonpayable',
            type: 'function',
            name: 'remove_role',
            inputs: [
                { name: 'account', type: 'address' },
                { name: 'role', type: 'uint256' },
            ],
            outputs: [],
        },
        {
            stateMutability: 'nonpayable',
            type: 'function',
            name: 'transfer_role_manager',
            inputs: [{ name: 'role_manager', type: 'address' }],
            outputs: [],
        },
        { stateMutability: 'nonpayable', type: 'function', name: 'accept_role_manager', inputs: [], outputs: [] },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'isShutdown',
            inputs: [],
            outputs: [{ name: '', type: 'bool' }],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'unlockedShares',
            inputs: [],
            outputs: [{ name: '', type: 'uint256' }],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'pricePerShare',
            inputs: [],
            outputs: [{ name: '', type: 'uint256' }],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'get_default_queue',
            inputs: [],
            outputs: [{ name: '', type: 'address[]' }],
        },
        {
            stateMutability: 'nonpayable',
            type: 'function',
            name: 'process_report',
            inputs: [{ name: 'strategy', type: 'address' }],
            outputs: [
                { name: '', type: 'uint256' },
                { name: '', type: 'uint256' },
            ],
        },
        {
            stateMutability: 'nonpayable',
            type: 'function',
            name: 'buy_debt',
            inputs: [
                { name: 'strategy', type: 'address' },
                { name: 'amount', type: 'uint256' },
            ],
            outputs: [],
        },
        {
            stateMutability: 'nonpayable',
            type: 'function',
            name: 'add_strategy',
            inputs: [{ name: 'new_strategy', type: 'address' }],
            outputs: [],
        },
        {
            stateMutability: 'nonpayable',
            type: 'function',
            name: 'add_strategy',
            inputs: [
                { name: 'new_strategy', type: 'address' },
                { name: 'add_to_queue', type: 'bool' },
            ],
            outputs: [],
        },
        {
            stateMutability: 'nonpayable',
            type: 'function',
            name: 'revoke_strategy',
            inputs: [{ name: 'strategy', type: 'address' }],
            outputs: [],
        },
        {
            stateMutability: 'nonpayable',
            type: 'function',
            name: 'force_revoke_strategy',
            inputs: [{ name: 'strategy', type: 'address' }],
            outputs: [],
        },
        {
            stateMutability: 'nonpayable',
            type: 'function',
            name: 'update_max_debt_for_strategy',
            inputs: [
                { name: 'strategy', type: 'address' },
                { name: 'new_max_debt', type: 'uint256' },
            ],
            outputs: [],
        },
        {
            stateMutability: 'nonpayable',
            type: 'function',
            name: 'update_debt',
            inputs: [
                { name: 'strategy', type: 'address' },
                { name: 'target_debt', type: 'uint256' },
            ],
            outputs: [{ name: '', type: 'uint256' }],
        },
        {
            stateMutability: 'nonpayable',
            type: 'function',
            name: 'update_debt',
            inputs: [
                { name: 'strategy', type: 'address' },
                { name: 'target_debt', type: 'uint256' },
                { name: 'max_loss', type: 'uint256' },
            ],
            outputs: [{ name: '', type: 'uint256' }],
        },
        { stateMutability: 'nonpayable', type: 'function', name: 'shutdown_vault', inputs: [], outputs: [] },
        {
            stateMutability: 'nonpayable',
            type: 'function',
            name: 'deposit',
            inputs: [
                { name: 'assets', type: 'uint256' },
                { name: 'receiver', type: 'address' },
            ],
            outputs: [{ name: '', type: 'uint256' }],
        },
        {
            stateMutability: 'nonpayable',
            type: 'function',
            name: 'mint',
            inputs: [
                { name: 'shares', type: 'uint256' },
                { name: 'receiver', type: 'address' },
            ],
            outputs: [{ name: '', type: 'uint256' }],
        },
        {
            stateMutability: 'nonpayable',
            type: 'function',
            name: 'withdraw',
            inputs: [
                { name: 'assets', type: 'uint256' },
                { name: 'receiver', type: 'address' },
                { name: 'owner', type: 'address' },
            ],
            outputs: [{ name: '', type: 'uint256' }],
        },
        {
            stateMutability: 'nonpayable',
            type: 'function',
            name: 'withdraw',
            inputs: [
                { name: 'assets', type: 'uint256' },
                { name: 'receiver', type: 'address' },
                { name: 'owner', type: 'address' },
                { name: 'max_loss', type: 'uint256' },
            ],
            outputs: [{ name: '', type: 'uint256' }],
        },
        {
            stateMutability: 'nonpayable',
            type: 'function',
            name: 'withdraw',
            inputs: [
                { name: 'assets', type: 'uint256' },
                { name: 'receiver', type: 'address' },
                { name: 'owner', type: 'address' },
                { name: 'max_loss', type: 'uint256' },
                { name: 'strategies', type: 'address[]' },
            ],
            outputs: [{ name: '', type: 'uint256' }],
        },
        {
            stateMutability: 'nonpayable',
            type: 'function',
            name: 'redeem',
            inputs: [
                { name: 'shares', type: 'uint256' },
                { name: 'receiver', type: 'address' },
                { name: 'owner', type: 'address' },
            ],
            outputs: [{ name: '', type: 'uint256' }],
        },
        {
            stateMutability: 'nonpayable',
            type: 'function',
            name: 'redeem',
            inputs: [
                { name: 'shares', type: 'uint256' },
                { name: 'receiver', type: 'address' },
                { name: 'owner', type: 'address' },
                { name: 'max_loss', type: 'uint256' },
            ],
            outputs: [{ name: '', type: 'uint256' }],
        },
        {
            stateMutability: 'nonpayable',
            type: 'function',
            name: 'redeem',
            inputs: [
                { name: 'shares', type: 'uint256' },
                { name: 'receiver', type: 'address' },
                { name: 'owner', type: 'address' },
                { name: 'max_loss', type: 'uint256' },
                { name: 'strategies', type: 'address[]' },
            ],
            outputs: [{ name: '', type: 'uint256' }],
        },
        {
            stateMutability: 'nonpayable',
            type: 'function',
            name: 'approve',
            inputs: [
                { name: 'spender', type: 'address' },
                { name: 'amount', type: 'uint256' },
            ],
            outputs: [{ name: '', type: 'bool' }],
        },
        {
            stateMutability: 'nonpayable',
            type: 'function',
            name: 'transfer',
            inputs: [
                { name: 'receiver', type: 'address' },
                { name: 'amount', type: 'uint256' },
            ],
            outputs: [{ name: '', type: 'bool' }],
        },
        {
            stateMutability: 'nonpayable',
            type: 'function',
            name: 'transferFrom',
            inputs: [
                { name: 'sender', type: 'address' },
                { name: 'receiver', type: 'address' },
                { name: 'amount', type: 'uint256' },
            ],
            outputs: [{ name: '', type: 'bool' }],
        },
        {
            stateMutability: 'nonpayable',
            type: 'function',
            name: 'permit',
            inputs: [
                { name: 'owner', type: 'address' },
                { name: 'spender', type: 'address' },
                { name: 'amount', type: 'uint256' },
                { name: 'deadline', type: 'uint256' },
                { name: 'v', type: 'uint8' },
                { name: 'r', type: 'bytes32' },
                { name: 's', type: 'bytes32' },
            ],
            outputs: [{ name: '', type: 'bool' }],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'balanceOf',
            inputs: [{ name: 'addr', type: 'address' }],
            outputs: [{ name: '', type: 'uint256' }],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'totalSupply',
            inputs: [],
            outputs: [{ name: '', type: 'uint256' }],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'totalAssets',
            inputs: [],
            outputs: [{ name: '', type: 'uint256' }],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'totalIdle',
            inputs: [],
            outputs: [{ name: '', type: 'uint256' }],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'totalDebt',
            inputs: [],
            outputs: [{ name: '', type: 'uint256' }],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'convertToShares',
            inputs: [{ name: 'assets', type: 'uint256' }],
            outputs: [{ name: '', type: 'uint256' }],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'previewDeposit',
            inputs: [{ name: 'assets', type: 'uint256' }],
            outputs: [{ name: '', type: 'uint256' }],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'previewMint',
            inputs: [{ name: 'shares', type: 'uint256' }],
            outputs: [{ name: '', type: 'uint256' }],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'convertToAssets',
            inputs: [{ name: 'shares', type: 'uint256' }],
            outputs: [{ name: '', type: 'uint256' }],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'maxDeposit',
            inputs: [{ name: 'receiver', type: 'address' }],
            outputs: [{ name: '', type: 'uint256' }],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'maxMint',
            inputs: [{ name: 'receiver', type: 'address' }],
            outputs: [{ name: '', type: 'uint256' }],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'maxWithdraw',
            inputs: [{ name: 'owner', type: 'address' }],
            outputs: [{ name: '', type: 'uint256' }],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'maxWithdraw',
            inputs: [
                { name: 'owner', type: 'address' },
                { name: 'max_loss', type: 'uint256' },
            ],
            outputs: [{ name: '', type: 'uint256' }],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'maxWithdraw',
            inputs: [
                { name: 'owner', type: 'address' },
                { name: 'max_loss', type: 'uint256' },
                { name: 'strategies', type: 'address[]' },
            ],
            outputs: [{ name: '', type: 'uint256' }],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'maxRedeem',
            inputs: [{ name: 'owner', type: 'address' }],
            outputs: [{ name: '', type: 'uint256' }],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'maxRedeem',
            inputs: [
                { name: 'owner', type: 'address' },
                { name: 'max_loss', type: 'uint256' },
            ],
            outputs: [{ name: '', type: 'uint256' }],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'maxRedeem',
            inputs: [
                { name: 'owner', type: 'address' },
                { name: 'max_loss', type: 'uint256' },
                { name: 'strategies', type: 'address[]' },
            ],
            outputs: [{ name: '', type: 'uint256' }],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'previewWithdraw',
            inputs: [{ name: 'assets', type: 'uint256' }],
            outputs: [{ name: '', type: 'uint256' }],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'previewRedeem',
            inputs: [{ name: 'shares', type: 'uint256' }],
            outputs: [{ name: '', type: 'uint256' }],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'FACTORY',
            inputs: [],
            outputs: [{ name: '', type: 'address' }],
        },
        {
            stateMutability: 'pure',
            type: 'function',
            name: 'apiVersion',
            inputs: [],
            outputs: [{ name: '', type: 'string' }],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'assess_share_of_unrealised_losses',
            inputs: [
                { name: 'strategy', type: 'address' },
                { name: 'assets_needed', type: 'uint256' },
            ],
            outputs: [{ name: '', type: 'uint256' }],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'profitMaxUnlockTime',
            inputs: [],
            outputs: [{ name: '', type: 'uint256' }],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'fullProfitUnlockDate',
            inputs: [],
            outputs: [{ name: '', type: 'uint256' }],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'profitUnlockingRate',
            inputs: [],
            outputs: [{ name: '', type: 'uint256' }],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'lastProfitUpdate',
            inputs: [],
            outputs: [{ name: '', type: 'uint256' }],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'DOMAIN_SEPARATOR',
            inputs: [],
            outputs: [{ name: '', type: 'bytes32' }],
        },
        { stateMutability: 'view', type: 'function', name: 'asset', inputs: [], outputs: [{ name: '', type: 'address' }] },
        { stateMutability: 'view', type: 'function', name: 'decimals', inputs: [], outputs: [{ name: '', type: 'uint8' }] },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'strategies',
            inputs: [{ name: 'arg0', type: 'address' }],
            outputs: [
                {
                    name: '',
                    type: 'tuple',
                    components: [
                        { name: 'activation', type: 'uint256' },
                        { name: 'last_report', type: 'uint256' },
                        { name: 'current_debt', type: 'uint256' },
                        { name: 'max_debt', type: 'uint256' },
                    ],
                },
            ],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'default_queue',
            inputs: [{ name: 'arg0', type: 'uint256' }],
            outputs: [{ name: '', type: 'address' }],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'use_default_queue',
            inputs: [],
            outputs: [{ name: '', type: 'bool' }],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'auto_allocate',
            inputs: [],
            outputs: [{ name: '', type: 'bool' }],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'allowance',
            inputs: [
                { name: 'arg0', type: 'address' },
                { name: 'arg1', type: 'address' },
            ],
            outputs: [{ name: '', type: 'uint256' }],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'minimum_total_idle',
            inputs: [],
            outputs: [{ name: '', type: 'uint256' }],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'deposit_limit',
            inputs: [],
            outputs: [{ name: '', type: 'uint256' }],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'accountant',
            inputs: [],
            outputs: [{ name: '', type: 'address' }],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'deposit_limit_module',
            inputs: [],
            outputs: [{ name: '', type: 'address' }],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'withdraw_limit_module',
            inputs: [],
            outputs: [{ name: '', type: 'address' }],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'roles',
            inputs: [{ name: 'arg0', type: 'address' }],
            outputs: [{ name: '', type: 'uint256' }],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'role_manager',
            inputs: [],
            outputs: [{ name: '', type: 'address' }],
        },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'future_role_manager',
            inputs: [],
            outputs: [{ name: '', type: 'address' }],
        },
        { stateMutability: 'view', type: 'function', name: 'name', inputs: [], outputs: [{ name: '', type: 'string' }] },
        { stateMutability: 'view', type: 'function', name: 'symbol', inputs: [], outputs: [{ name: '', type: 'string' }] },
        {
            stateMutability: 'view',
            type: 'function',
            name: 'nonces',
            inputs: [{ name: 'arg0', type: 'address' }],
            outputs: [{ name: '', type: 'uint256' }],
        },
    ];
    const contract = new WEB3_WS_PROVIDER.eth.Contract(abi, address);
    return contract;
}
//# sourceMappingURL=Helper.js.map